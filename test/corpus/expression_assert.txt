===
Expression: Assert: Equal: simple
===

a := assert("a" == "b", "c")

---

(file
  (assignment
    (identifier)
    (expression
      (condition
        (expression
          (value
            (string)))
        (expression
          (value
            (string))))
      (expression
        (value
          (string))))))

===
Expression: Assert: Equal: nested
===

a := assert(("a" / os()) == "true", arch() + shell("bash", "-c", "echo", "toto"))

---

(file
  (assignment
    (identifier)
    (expression
      (condition
        (expression
          (value
            (expression
              (value
                (string))
              (expression
                (value
                  (builtin_function_call))))))
        (expression
          (value
            (string))))
      (expression
        (value
          (builtin_function_call))
        (expression
          (value
            (builtin_function_call
              (function_parameters
                (expression
                  (value
                    (string)))
                (expression
                  (value
                    (string)))
                (expression
                  (value
                    (string)))
                (expression
                  (value
                    (string)))))))))))

===
Expression: Assert: Not equal: simple
===

a := assert("a" != "b", "c")

---

(file
  (assignment
    (identifier)
    (expression
      (condition
        (expression
          (value
            (string)))
        (expression
          (value
            (string))))
      (expression
        (value
          (string))))))

===
Expression: Assert: Not equal: nested
===

a := assert(("a" / os()) != "true", arch() + shell("bash", "-c", "echo", "toto"))

---

(file
  (assignment
    (identifier)
    (expression
      (condition
        (expression
          (value
            (expression
              (value
                (string))
              (expression
                (value
                  (builtin_function_call))))))
        (expression
          (value
            (string))))
      (expression
        (value
          (builtin_function_call))
        (expression
          (value
            (builtin_function_call
              (function_parameters
                (expression
                  (value
                    (string)))
                (expression
                  (value
                    (string)))
                (expression
                  (value
                    (string)))
                (expression
                  (value
                    (string)))))))))))

===
Expression: Assert: Not equal: simple
===

a := assert("a" =~ "b", "c")

---

(file
  (assignment
    (identifier)
    (expression
      (condition
        (expression
          (value
            (string)))
        (expression
          (value
            (string))))
      (expression
        (value
          (string))))))

===
Expression: Assert: Not equal: nested
===

a := assert(("a" / os()) =~ "true", arch() + shell("bash", "-c", "echo", "toto"))

---

(file
  (assignment
    (identifier)
    (expression
      (condition
        (expression
          (value
            (expression
              (value
                (string))
              (expression
                (value
                  (builtin_function_call))))))
        (expression
          (value
            (string))))
      (expression
        (value
          (builtin_function_call))
        (expression
          (value
            (builtin_function_call
              (function_parameters
                (expression
                  (value
                    (string)))
                (expression
                  (value
                    (string)))
                (expression
                  (value
                    (string)))
                (expression
                  (value
                    (string)))))))))))
